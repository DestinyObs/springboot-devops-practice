# Production Override for Docker Compose
# Use with: docker compose -f docker-compose.yml -f docker-compose.prod.yml up -d
# Configure CORS via environment variables before running

services:
  app:
    environment:
      # Production Profile
      SPRING_PROFILES_ACTIVE: prod
      
      # Database Configuration (Production)
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/user_registration_db?createDatabaseIfNotExist=true&useSSL=true&serverTimezone=UTC&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf8
      
      # Security Configuration (Production)
      JWT_SECRET: ${JWT_SECRET:-prodSecretKey123456789012345678901234567890123456789012345678901234567890}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}
      JWT_REFRESH_EXPIRATION: ${JWT_REFRESH_EXPIRATION:-604800000}
      
      # CORS Configuration (Environment-driven, no hardcoded values)
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      CORS_ALLOWED_PATTERNS: ${CORS_ALLOWED_PATTERNS}
      CORS_ALLOW_CREDENTIALS: ${CORS_ALLOW_CREDENTIALS:-true}
      
      # Swagger Configuration (Environment-driven)
      SWAGGER_SERVERS: ${SWAGGER_SERVERS}

  mysql:
    environment:
      # Production MySQL configuration
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-prodRootPassword123}
      MYSQL_DATABASE: user_registration_db
      MYSQL_USER: ${MYSQL_USER:-prod_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-prodUserPassword123}
